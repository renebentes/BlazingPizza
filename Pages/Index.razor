@page "/"
@rendermode InteractiveServer

<div class="top-bar">
  <a class="logo" href="">
    <img src="img/logo.svg" />
  </a>

  <a href="" class="nav-tab active">
    <img src="img/pizza-slice.svg" />
    <div>Get Pizza</div>
  </a>

  <a href="myorders" class="nav-tab">
    <img src="img/bike.svg" />
    <div>My orders</div>
  </a>
</div>

<div class="main">
  <h1>Blazing Pizzas</h1>
  <ul class="pizza-cards">
    @if (_specials is not null)
    {
      @foreach (var special in _specials)
      {
        <li @onclick="() => orderState.ShowConfigurePizzaDialog(special)"
          style="background-image: url('@special.ImageUrl')">
          <div class="pizza-info">
            <span class="title">@special.Name</span>
            @special.Description
            <span class="price">@special.GetFormattedBasePrice()</span>
          </div>
        </li>
      }
    }
  </ul>
</div>

@if (orderState.ShowingConfigureDialog)
{
  <ConfigurePizzaDialog Pizza="orderState.ConfiguringPizza" OnCancel="orderState.CancelConfigurePizzaDialog"
    OnConfirm="orderState.ConfirmConfigurePizzaDialog" />
}

<div class="sidebar">
  @if (Order.Pizzas.Any())
  {
    <div class="order-contents">
      <h2>Your order</h2>

      @foreach (var configuredPizza in Order.Pizzas)
      {
        <div class="cart-item">
          <div class="title">@(configuredPizza.Size)" @configuredPizza.Special.Name</div>
          <div class="item-price">
            @configuredPizza.GetFormattedTotalPrice()
            <a @onclick="@(() => orderState.RemoveConfiguredPizza(configuredPizza))" class="delete-item">x</a>
          </div>
        </div>
      }
    </div>
  }
  else
  {
    <div class="empty-cart">Choose a pizza<br>to get started</div>
  }

  <div class="order-total @(Order.Pizzas.Any() ? "" : "hidden")">
    Total:
    <span class="total-price">@Order.GetFormattedTotalPrice()</span>
    <a href="checkout" class="@(Order.Pizzas.Count == 0 ? "btn btn-warning disabled" : "btn btn-warning")">
      Order >
    </a>
  </div>
</div>
